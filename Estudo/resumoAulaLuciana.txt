Requisitos Funcionais:

Definição: Requisitos funcionais descrevem as funcionalidades específicas que um sistema deve fornecer. 
Eles definem o que o sistema deve fazer, incluindo as interações do usuário e as respostas do sistema a entradas específicas.

Exemplo:
- Requisito: O sistema deve permitir que os usuários se registrem com um endereço de e-mail e uma senha.
- Descrição: Esse requisito especifica que, ao acessar a página de registro, os usuários devem conseguir criar uma conta fornecendo
 seu e-mail e criando uma senha. Após a validação, o sistema deve armazenar essas informações e permitir que o usuário faça login posteriormente.

-------------------------->/?°

Requisitos Não-Funcionais:

Definição: Requisitos não-funcionais estabelecem as condições que o sistema deve atender, relacionadas ao desempenho, segurança,
 usabilidade e outras qualidades. Eles definem como o sistema deve operar em vez de o que ele deve fazer.

Exemplo:
- Requisito: O sistema deve ter um tempo de resposta de no máximo 2 segundos para 95% das requisições dos usuários.
- Descrição: Esse requisito define um critério de desempenho. Ele assegura que, ao utilizar o sistema, os usuários não devem esperar
 mais do que 2 segundos para que suas ações (como carregar uma página ou buscar informações) sejam concluídas, promovendo uma experiência fluida.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Requisitos de Usuários:

Definição: Requisitos de usuários descrevem as necessidades e expectativas dos usuários em relação a um sistema. 
Eles ajudam a entender o que os usuários desejam alcançar e como o sistema pode apoiá-los.

1. **Who (Quem)**:
   - Identifica os usuários que farão uso do sistema.
   - Exemplo: "Usuários finais, como clientes que compram produtos online."

2. **What (O que)**:
   - Descreve a funcionalidade ou necessidade específica que o usuário deseja.
   - Exemplo: "Os usuários devem poder visualizar o histórico de suas compras."

3. **Why (Por que)**:
   - Explica a razão pela qual essa necessidade é importante.
   - Exemplo: "Para que os usuários possam facilmente acompanhar suas compras anteriores e gerenciar retornos ou trocas."

Juntando os elementos:
- **Requisito de Usuário**: "Os usuários finais devem poder visualizar o histórico de suas compras para que possam facilmente 
acompanhar suas compras anteriores e gerenciar retornos ou trocas."

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Regras de Negócio:

Definição: Regras de negócio são diretrizes ou condições que definem ou restringem alguns aspectos de um negócio.
 Elas orientam decisões e comportamentos dentro de uma organização, assegurando que as operações sejam realizadas 
 de acordo com as políticas e objetivos estabelecidos.

Exemplo: 
- "Os pedidos só podem ser aprovados se o cliente tiver crédito disponível."
- "Os descontos só podem ser aplicados a compras acima de R$100,00."

Importância:
- As regras de negócio ajudam a garantir conformidade, eficiência e consistência nas operações.
- Elas servem como base para o desenvolvimento de sistemas e processos, garantindo que as necessidades e objetivos da 
organização sejam atendidos.

Resumo:
Regras de negócio definem as normas e diretrizes que governam as operações de uma empresa, assegurando que as ações 
estejam alinhadas com os objetivos organizacionais.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Stakeholders:

Definição: Stakeholders são todas as partes interessadas em um projeto ou negócio, que podem influenciar ou ser impactadas por 
suas ações e decisões.

Tipos de Stakeholders:

1. **Stakeholders Primários:**
   - Descrição: São aqueles diretamente envolvidos no projeto e que têm um interesse significativo em seu sucesso ou fracasso. 
   Eles afetam diretamente o resultado do projeto.
   - Exemplos: Clientes, usuários finais, membros da equipe de desenvolvimento, patrocinadores do projeto.

2. **Stakeholders Secundários:**
   - Descrição: São aqueles que não estão diretamente envolvidos, mas que podem ser afetados pelo projeto ou que têm algum 
   interesse no resultado. Eles podem influenciar o projeto indiretamente.
   - Exemplos: Comunidade local, órgãos reguladores, fornecedores, concorrentes, imprensa.

Importância:
- Identificar e entender os stakeholders é fundamental para garantir que suas necessidades e expectativas sejam consideradas,
 ajudando a evitar conflitos e a promover um melhor alinhamento durante o desenvolvimento de projetos.

Resumo:
Os stakeholders são partes interessadas em um projeto, divididos em primários (diretamente envolvidos) e secundários 
(afetados indiretamente), e sua identificação é crucial para o sucesso do projeto.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Exemplo de tabela com historico de usuarios e seus requisitos:

| ID  | História de Usuário                                                                                     | Stakeholder 1        | Stakeholder 2        | Requisito Funcional                                                                                 | Requisito Não Funcional                                             | Regra de Negócio                                                 |
|-----|---------------------------------------------------------------------------------------------------------|----------------------|----------------------|-----------------------------------------------------------------------------------------------------|---------------------------------------------------------------------|------------------------------------------------------------------|
| 1   | Como um cliente, quero visualizar o catálogo de produtos, para escolher o que quero comprar.            | Cliente              | Gerente de Vendas    | O sistema deve permitir que o cliente veja todos os produtos disponíveis.                           | O catálogo deve carregar em até 3 segundos.                         | Todos os produtos devem estar atualizados.                       |
| 2   | Como um administrador, quero adicionar novos produtos ao sistema, para manter o estoque atualizado.     | Administrador        | Cliente              | O sistema deve permitir a adição de novos produtos com informações como nome, preço e descrição.    | A interface deve ser intuitiva e fácil de usar.                     | Os produtos devem ser validados antes da adição.                 |
| 3   | Como um usuário, quero poder realizar o pagamento online, para concluir minhas compras de forma rápida. | Cliente              | Banco                | O sistema deve oferecer opções de pagamento, como cartão de crédito e PayPal.                       | O processo de pagamento deve ser seguro e criptografado.            | O pagamento deve ser confirmado em até 5 minutos.                |
| 4   | Como um suporte técnico, quero acessar relatórios de vendas, para identificar tendências e problemas.   | Suporte Técnico      | Gerente de Vendas    | O sistema deve gerar relatórios de vendas mensais e anuais.                                         | Os relatórios devem estar disponíveis em PDF e Excel.               | Os relatórios devem ser gerados automaticamente no final do mês. |
| 5   | Como um cliente, quero receber notificações de promoções por e-mail, para não perder ofertas.           | Cliente              | Marketing            | O sistema deve enviar e-mails automáticos quando houver promoções.                                  | As notificações devem ser enviadas em até 24 horas após a promoção. | Os clientes devem optar por receber ou não as notificações.      |

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

### Diferença entre 3 Cs e 3 Ws

- **3 Ws (Who, What, Why)**:
  - **Who**: Identifica quem é o usuário ou stakeholder.
  - **What**: Define o que o usuário quer fazer.
  - **Why**: Explica a razão pela qual isso é importante para o usuário.

- **3 Cs (Card, Conversation, Confirmation)**:
  - **Card**: Uma breve descrição da história de usuário.
  - **Conversation**: Refere-se ao diálogo e discussão entre stakeholders sobre os requisitos.
  - **Confirmation**: Define os critérios de aceitação que confirmam quando a história está completa.

### UML e INVEST nas Histórias de Usuário

- **UML (Unified Modeling Language)**:
  - É uma linguagem de modelagem que fornece uma forma padronizada de visualizar o design de um sistema.
   Em histórias de usuário, pode ser usada para criar diagramas que ilustram interações, fluxos de trabalho 
   e estrutura do sistema.

- **INVEST**:
  - É um acrônimo que ajuda a garantir que as histórias de usuário sejam eficazes:
    - **I**ndependente: Cada história pode ser desenvolvida de forma isolada.
    - **N**egociável: As histórias são flexíveis e não rígidas.
    - **V**aloroso: Cada história oferece valor ao usuário.
    - **E**stimável: As histórias são pequenas o suficiente para que o esforço possa ser estimado.
    - **S**imples: As histórias devem ser claras e diretas.
    - **T**estável: Cada história deve ter critérios que permitam a validação da implementação.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------


### Manifesto Ágil

O Manifesto Ágil, criado em 2001, é um documento que define os princípios fundamentais do desenvolvimento
 ágil de software. Ele enfatiza a colaboração, a flexibilidade e a entrega contínua de valor. O manifesto 
 é composto por quatro valores principais e doze princípios.

#### Quatro Valores do Manifesto Ágil

1. **Indivíduos e interações mais que processos e ferramentas**:
   - Valoriza a comunicação e a colaboração entre a equipe, em vez de depender apenas de ferramentas ou
    processos rígidos.

2. **Software funcionando mais que documentação abrangente**:
   - Prioriza a entrega de software que funcione em vez de se concentrar em documentação extensiva que pode
    se tornar obsoleta.

3. **Colaboração com o cliente mais que negociação de contratos**:
   - Enfatiza a importância de trabalhar junto ao cliente durante todo o processo de desenvolvimento,
    ao invés de apenas seguir contratos.

4. **Responder a mudanças mais que seguir um plano**:
   - Valoriza a capacidade de adaptação e resposta a mudanças ao longo do projeto, ao invés de seguir
    estritamente um plano pré-definido.

#### Doze Princípios do Manifesto Ágil

1. Satisfação do cliente através da entrega contínua de software valioso.
2. Mudanças nos requisitos são bem-vindas, mesmo em estágios avançados do desenvolvimento.
3. Entrega frequente de software funcionando, de semanas a meses.
4. Colaboração diária entre pessoas de negócios e desenvolvedores.
5. Projetos devem ser construídos em torno de indivíduos motivados.
6. A comunicação face a face é a mais eficaz.
7. Software funcionando é a principal medida de progresso.
8. Desenvolvimento sustentável, com um ritmo constante que pode ser mantido indefinidamente.
9. Atenção contínua à excelência técnica e ao bom design.
10. Simplicidade – a arte de maximizar o trabalho não realizado.
11. As melhores arquiteturas, requisitos e designs emergem de equipes auto-organizadas.
12. A reflexão regular sobre como se tornar mais eficaz e a adaptação ao longo do tempo.

O Manifesto Ágil promove uma cultura de melhoria contínua e adaptação, essencial para o sucesso em ambientes 
de desenvolvimento dinâmicos.

